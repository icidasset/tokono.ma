module Common.VirtualDom exposing ( fromHtml )

import Common.Html.Interior exposing (..)
import Json.Encode
import VirtualDom


fromHtml : Html msg -> VirtualDom.Node msg
fromHtml html =
    case html of
        Node tagName attributes children ->
            VirtualDom.node
                tagName
                (Array.map
                    (\attr ->
                        case attr of
                            Attribute key value ->
                                VirtualDom.attribute key value

                            BoolProperty key value ->
                                VirtualDom.property key (Json.Encode.bool value)

                            StringProperty key value ->
                                VirtualDom.property key (Json.Encode.string value)

                            Style key value ->
                                VirtualDom.style key value

                            ValueProperty key value ->
                                VirtualDom.property key value
                    )
                    attributes
                )
                (case children of
                    Regular nodes ->
                        Array.map fromHtml nodes
                )

        TextNode text ->
            VirtualDom.text text
