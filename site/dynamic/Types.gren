module Types exposing (..)

import Browser
import Browser.Navigation
import Dict exposing ( Dict )
import Essays
import Json.Decode as Json
import Markdown
import Markdown.Block as Markdown
import Messages as View
import Pages exposing ( TableOfContents )
import Url exposing ( Url )



-- ðŸŒ³


type alias Model =
    { essays :
        { collection : Dict String MarkdownItem
        , tableOfContents : TableOfContents
        }
    , notes :
        { collection : Dict String MarkdownItem
        , tableOfContents : TableOfContents
        }
    , navKey : Browser.Navigation.Key
    , rootUrl : Url
    , url : Url
    }


type alias MarkdownItem =
    { archived : Bool
    , baseName : String
    , blocks : Array Json.Value
    , title : String
    }



-- ðŸ“£


type Msg
    = UrlChanged Url
    | UrlRequested Browser.UrlRequest
    | ViewMsg View.Msg
