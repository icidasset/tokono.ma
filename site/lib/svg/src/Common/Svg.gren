module Svg exposing ( Svg, Attribute, text, node, map, svg, foreignObject, circle, ellipse, image, line, path, polygon, polyline, rect, use, animate, animateColor, animateMotion, animateTransform, mpath, set, desc, metadata, title, a, defs, g, marker, mask, pattern, switch, symbol, altGlyph, altGlyphDef, altGlyphItem, glyph, glyphRef, textPath, text_, tref, tspan, font, linearGradient, radialGradient, stop, feBlend, feColorMatrix, feComponentTransfer, feComposite, feConvolveMatrix, feDiffuseLighting, feDisplacementMap, feFlood, feFuncA, feFuncB, feFuncG, feFuncR, feGaussianBlur, feImage, feMerge, feMergeNode, feMorphology, feOffset, feSpecularLighting, feTile, feTurbulence, feDistantLight, fePointLight, feSpotLight, clipPath, colorProfile, cursor, filter, style, view )

{-|

# SVG Nodes
@docs Svg, Attribute, text, node, map

# HTML Embedding
@docs svg, foreignObject

# Graphics elements
@docs circle, ellipse, image, line, path, polygon, polyline, rect, use

# Animation elements
@docs animate, animateColor, animateMotion, animateTransform, mpath, set

# Descriptive elements
@docs desc, metadata, title

# Containers
@docs a, defs, g, marker, mask, pattern, switch, symbol

# Text
@docs altGlyph, altGlyphDef, altGlyphItem, glyph, glyphRef, textPath, text_,
  tref, tspan

# Fonts
@docs font

# Gradients
@docs linearGradient, radialGradient, stop

# Filters
@docs feBlend, feColorMatrix, feComponentTransfer, feComposite,
  feConvolveMatrix, feDiffuseLighting, feDisplacementMap, feFlood, feFuncA,
  feFuncB, feFuncG, feFuncR, feGaussianBlur, feImage, feMerge, feMergeNode,
  feMorphology, feOffset, feSpecularLighting, feTile, feTurbulence

# Light source elements
@docs feDistantLight, fePointLight, feSpotLight

# Miscellaneous
@docs clipPath, colorProfile, cursor, filter, style, view
-}

import Html
import VirtualDom



-- PRIMITIVES


{-| The core building block to create SVG. This library is filled with helper
functions to create these `Svg` values.
-}
type alias Svg msg =
    Html msg


{-| Set attributes on your `Svg`.
-}
type alias Attribute msg =
    Html.Attribute msg


{-| Create any SVG node. To create a `<rect>` helper function, you would write:

    rect : Array (Attribute msg) -> Array (Svg msg) -> Svg msg
    rect attributes children =
        node "rect" attributes children

You should always be able to use the helper functions already defined in this
library though!
-}
node : String -> Array (Attribute msg) -> Array (Svg msg) -> Svg msg
node =
    Html.node


{-| A simple text node, no tags at all.

Warning: not to be confused with `text_` which produces the SVG `<text>` tag!
-}
text : String -> Svg msg
text =
    Html.text



-- TAGS


{-| The root `<svg>` node for any SVG scene. This example shows a scene
containing a rounded rectangle:

    import Svg exposing (..)
    import Svg.Attributes exposing (..)

    roundRect =
        svg
          [ width "120", height "120", viewBox "0 0 120 120" ]
          [ rect [ x "10", y "10", width "100", height "100", rx "15", ry "15" ] [] ]
-}
svg : Array (Html.Attribute msg) -> Array (Svg msg) -> Html.Html msg
svg attributes =
    node "svg" (Array.pushFirst (Html.Attributes.xmlns "http://www.w3.org/2000/svg") attributes)


{-|-}
foreignObject : Array (Attribute msg) -> Array (Html.Html msg) -> Svg msg
foreignObject =
    node "foreignObject"



-- Animation elements


{-|-}
animate : Array (Attribute msg) -> Array (Svg msg) -> Svg msg
animate =
    node "animate"


{-|-}
animateColor : Array (Attribute msg) -> Array (Svg msg) -> Svg msg
animateColor =
    node "animateColor"


{-|-}
animateMotion : Array (Attribute msg) -> Array (Svg msg) -> Svg msg
animateMotion =
    node "animateMotion"


{-|-}
animateTransform : Array (Attribute msg) -> Array (Svg msg) -> Svg msg
animateTransform =
    node "animateTransform"


{-|-}
mpath : Array (Attribute msg) -> Array (Svg msg) -> Svg msg
mpath =
    node "mpath"


{-|-}
set : Array (Attribute msg) -> Array (Svg msg) -> Svg msg
set =
    node "set"



-- Container elements


{-| The SVG Anchor Element defines a hyperlink.
-}
a : Array (Attribute msg) -> Array (Svg msg) -> Svg msg
a =
    node "a"


{-|-}
defs : Array (Attribute msg) -> Array (Svg msg) -> Svg msg
defs =
    node "defs"


{-|-}
g : Array (Attribute msg) -> Array (Svg msg) -> Svg msg
g =
    node "g"


{-|-}
marker : Array (Attribute msg) -> Array (Svg msg) -> Svg msg
marker =
    node "marker"


{-|-}
mask : Array (Attribute msg) -> Array (Svg msg) -> Svg msg
mask =
    node "mask"


{-|-}
pattern : Array (Attribute msg) -> Array (Svg msg) -> Svg msg
pattern =
    node "pattern"


{-|-}
switch : Array (Attribute msg) -> Array (Svg msg) -> Svg msg
switch =
    node "switch"


{-|-}
symbol : Array (Attribute msg) -> Array (Svg msg) -> Svg msg
symbol =
    node "symbol"



-- Descriptive elements


{-|-}
desc : Array (Attribute msg) -> Array (Svg msg) -> Svg msg
desc =
    node "desc"


{-|-}
metadata : Array (Attribute msg) -> Array (Svg msg) -> Svg msg
metadata =
    node "metadata"


{-|-}
title : Array (Attribute msg) -> Array (Svg msg) -> Svg msg
title =
    node "title"



-- Filter primitive elements


{-|-}
feBlend : Array (Attribute msg) -> Array (Svg msg) -> Svg msg
feBlend =
    node "feBlend"


{-|-}
feColorMatrix : Array (Attribute msg) -> Array (Svg msg) -> Svg msg
feColorMatrix =
    node "feColorMatrix"


{-|-}
feComponentTransfer : Array (Attribute msg) -> Array (Svg msg) -> Svg msg
feComponentTransfer =
    node "feComponentTransfer"


{-|-}
feComposite : Array (Attribute msg) -> Array (Svg msg) -> Svg msg
feComposite =
    node "feComposite"


{-|-}
feConvolveMatrix : Array (Attribute msg) -> Array (Svg msg) -> Svg msg
feConvolveMatrix =
    node "feConvolveMatrix"


{-|-}
feDiffuseLighting : Array (Attribute msg) -> Array (Svg msg) -> Svg msg
feDiffuseLighting =
    node "feDiffuseLighting"


{-|-}
feDisplacementMap : Array (Attribute msg) -> Array (Svg msg) -> Svg msg
feDisplacementMap =
    node "feDisplacementMap"


{-|-}
feFlood : Array (Attribute msg) -> Array (Svg msg) -> Svg msg
feFlood =
    node "feFlood"


{-|-}
feFuncA : Array (Attribute msg) -> Array (Svg msg) -> Svg msg
feFuncA =
    node "feFuncA"


{-|-}
feFuncB : Array (Attribute msg) -> Array (Svg msg) -> Svg msg
feFuncB =
    node "feFuncB"


{-|-}
feFuncG : Array (Attribute msg) -> Array (Svg msg) -> Svg msg
feFuncG =
    node "feFuncG"


{-|-}
feFuncR : Array (Attribute msg) -> Array (Svg msg) -> Svg msg
feFuncR =
    node "feFuncR"


{-|-}
feGaussianBlur : Array (Attribute msg) -> Array (Svg msg) -> Svg msg
feGaussianBlur =
    node "feGaussianBlur"


{-|-}
feImage : Array (Attribute msg) -> Array (Svg msg) -> Svg msg
feImage =
    node "feImage"


{-|-}
feMerge : Array (Attribute msg) -> Array (Svg msg) -> Svg msg
feMerge =
    node "feMerge"


{-|-}
feMergeNode : Array (Attribute msg) -> Array (Svg msg) -> Svg msg
feMergeNode =
    node "feMergeNode"


{-|-}
feMorphology : Array (Attribute msg) -> Array (Svg msg) -> Svg msg
feMorphology =
    node "feMorphology"


{-|-}
feOffset : Array (Attribute msg) -> Array (Svg msg) -> Svg msg
feOffset =
    node "feOffset"


{-|-}
feSpecularLighting : Array (Attribute msg) -> Array (Svg msg) -> Svg msg
feSpecularLighting =
    node "feSpecularLighting"


{-|-}
feTile : Array (Attribute msg) -> Array (Svg msg) -> Svg msg
feTile =
    node "feTile"


{-|-}
feTurbulence : Array (Attribute msg) -> Array (Svg msg) -> Svg msg
feTurbulence =
    node "feTurbulence"



-- Font elements


{-|-}
font : Array (Attribute msg) -> Array (Svg msg) -> Svg msg
font =
    node "font"



-- Gradient elements


{-|-}
linearGradient : Array (Attribute msg) -> Array (Svg msg) -> Svg msg
linearGradient =
    node "linearGradient"


{-|-}
radialGradient : Array (Attribute msg) -> Array (Svg msg) -> Svg msg
radialGradient =
    node "radialGradient"


{-|-}
stop : Array (Attribute msg) -> Array (Svg msg) -> Svg msg
stop =
    node "stop"



-- Graphics elements


{-| The circle element is an SVG basic shape, used to create circles based on
a center point and a radius.

    circle [ cx "60", cy "60", r "50" ] []
-}
circle : Array (Attribute msg) -> Array (Svg msg) -> Svg msg
circle =
    node "circle"


{-|-}
ellipse : Array (Attribute msg) -> Array (Svg msg) -> Svg msg
ellipse =
    node "ellipse"


{-|-}
image : Array (Attribute msg) -> Array (Svg msg) -> Svg msg
image =
    node "image"


{-|-}
line : Array (Attribute msg) -> Array (Svg msg) -> Svg msg
line =
    node "line"


{-|-}
path : Array (Attribute msg) -> Array (Svg msg) -> Svg msg
path =
    node "path"


{-|-}
polygon : Array (Attribute msg) -> Array (Svg msg) -> Svg msg
polygon =
    node "polygon"


{-| The polyline element is an SVG basic shape, used to create a series of
straight lines connecting several points. Typically a polyline is used to
create open shapes.

    polyline [ fill "none", stroke "black", points "20,100 40,60 70,80 100,20" ] []
-}
polyline : Array (Attribute msg) -> Array (Svg msg) -> Svg msg
polyline =
    node "polyline"


{-|-}
rect : Array (Attribute msg) -> Array (Svg msg) -> Svg msg
rect =
    node "rect"


{-|-}
use : Array (Attribute msg) -> Array (Svg msg) -> Svg msg
use =
    node "use"



-- Light source elements


{-|-}
feDistantLight : Array (Attribute msg) -> Array (Svg msg) -> Svg msg
feDistantLight =
    node "feDistantLight"


{-|-}
fePointLight : Array (Attribute msg) -> Array (Svg msg) -> Svg msg
fePointLight =
    node "fePointLight"


{-|-}
feSpotLight : Array (Attribute msg) -> Array (Svg msg) -> Svg msg
feSpotLight =
    node "feSpotLight"



-- Text content elements


{-|-}
altGlyph : Array (Attribute msg) -> Array (Svg msg) -> Svg msg
altGlyph =
    node "altGlyph"


{-|-}
altGlyphDef : Array (Attribute msg) -> Array (Svg msg) -> Svg msg
altGlyphDef =
    node "altGlyphDef"


{-|-}
altGlyphItem : Array (Attribute msg) -> Array (Svg msg) -> Svg msg
altGlyphItem =
    node "altGlyphItem"


{-|-}
glyph : Array (Attribute msg) -> Array (Svg msg) -> Svg msg
glyph =
    node "glyph"


{-|-}
glyphRef : Array (Attribute msg) -> Array (Svg msg) -> Svg msg
glyphRef =
    node "glyphRef"


{-|-}
textPath : Array (Attribute msg) -> Array (Svg msg) -> Svg msg
textPath =
    node "textPath"


{-|-}
text_ : Array (Attribute msg) -> Array (Svg msg) -> Svg msg
text_ =
    node "text"


{-|-}
tref : Array (Attribute msg) -> Array (Svg msg) -> Svg msg
tref =
    node "tref"


{-|-}
tspan : Array (Attribute msg) -> Array (Svg msg) -> Svg msg
tspan =
    node "tspan"



-- Uncategorized elements


{-|-}
clipPath : Array (Attribute msg) -> Array (Svg msg) -> Svg msg
clipPath =
    node "clipPath"


{-|-}
colorProfile : Array (Attribute msg) -> Array (Svg msg) -> Svg msg
colorProfile =
    node "colorProfile"


{-|-}
cursor : Array (Attribute msg) -> Array (Svg msg) -> Svg msg
cursor =
    node "cursor"


{-|-}
filter : Array (Attribute msg) -> Array (Svg msg) -> Svg msg
filter =
    node "filter"


{-|-}
style : Array (Attribute msg) -> Array (Svg msg) -> Svg msg
style =
    node "style"


{-|-}
view : Array (Attribute msg) -> Array (Svg msg) -> Svg msg
view =
    node "view"
